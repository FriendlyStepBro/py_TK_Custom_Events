name: Build and Save Wheels

on:
  workflow_dispatch:
  # push:
  #   branches-ignore:
  #     - build  # Prevent workflow from running when pushing to the build branch

permissions:
  contents: write  # Allows the workflow to push changes to the repository

jobs:
  build_wheels:
    name: Build Wheels for ${{ matrix.os }} on Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']
        architecture: ['x64']

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies for Linux/Mac
        run: |
          if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
            sudo apt-get update
            sudo apt-get install -y tk-dev tcl-dev libx11-dev
          elif [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            brew install tcl-tk
            export LIBRARY_PATH="/usr/local/opt/tcl-tk/lib"
          fi
          python -m pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: |
          python setup.py build
          python setup.py bdist_wheel  # Build the wheel
        shell: bash

  windows_build:
    name: Build Windows Wheels using Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Build with Docker for Windows
        run: |
          docker run --rm -v "${{ github.workspace }}:/workspace" -w /workspace ghcr.io/msys2/msys2:20231001 msys2/bash -lc "
            pacman -Syu --noconfirm;
            pacman -S --noconfirm mingw-w64-x86_64-python3 mingw-w64-x86_64-python-pip mingw-w64-x86_64-gcc mingw-w64-x86_64-tcl mingw-w64-x86_64-tk;
            python3 -m pip install --upgrade pip setuptools wheel;
            python3 setup.py build;
            python3 setup.py bdist_wheel;
          "

      - name: Set permissions for output files
        run: sudo chown -R $USER:$USER ${{ github.workspace }}

  commit_and_push:
    name: Commit and Push Wheels
    needs: [build_wheels, windows_build]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Add and Commit Wheels
        run: |
          git add dist/*.whl
          git commit -m "Update wheel files for Python 3.12"

      - name: Push Changes
        run: git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}