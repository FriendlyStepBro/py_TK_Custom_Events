name: Build and Save Wheels

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - build  # Prevent workflow from running when pushing to the build branch

permissions:
  contents: write  # Allows the workflow to push changes to the repository

jobs:
  build_wheels:
    name: Build Wheels for ${{ matrix.os }} on Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
        architecture: ['x64']

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies for Linux/Mac
        if: matrix.os != 'windows-latest'
        run: |
          if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
            sudo apt-get update
            sudo apt-get install -y tk-dev tcl-dev libx11-dev
          elif [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            brew install xquartz  # Install XQuartz to get X11 libraries
            export LIBRARY_PATH="/opt/X11/lib"  # Ensure X11 libraries are correctly linked
          fi
          python -m pip install --upgrade pip setuptools wheel

      - name: Install MSYS2 and Tcl/Tk for Windows
        if: matrix.os == 'windows-latest'
        run: |
          # Install MSYS2
          choco install msys2
          
          # Update MSYS2 and install necessary packages
          C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-tcl mingw-w64-x86_64-tk"

      - name: Add MSYS2 Paths
        if: matrix.os == 'windows-latest'
        run: |
          # Add MSYS2 paths for Tcl/Tk and GCC to the GitHub runner's PATH
          echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
          echo "C:\msys64\mingw64\include" >> $GITHUB_PATH
          echo "C:\msys64\mingw64\lib" >> $GITHUB_PATH

      - name: Build wheel in MinGW64 environment
        if: matrix.os == 'windows-latest'
        run: |
          # Use Python3 from MSYS2 environment for building the wheel
          C:\msys64\usr\bin\bash -lc "
          export PATH=/mingw64/bin:$PATH
          python3 -m pip install --upgrade pip setuptools wheel;
          python3 setup.py build;
          python3 setup.py bdist_wheel;
          "

      - name: Build wheel
        if: matrix.os != 'windows-latest'
        run: |
          python setup.py build
          python setup.py bdist_wheel  # Build the wheel
        shell: bash  # Use bash shell for this step

      - name: Commit and push the built wheels
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git clean -fd  # Remove untracked files (such as wheel files in 'dist/')
          git checkout master
          git pull origin master  # Pull the latest changes from master
          python setup.py bdist_wheel  # Generate the wheel files
          git add .  # Add all changes to the commit
          git commit -a -m "Update wheel files for Python 3.12 on ${{ matrix.os }} (x64)"
          git push --force origin master  # Force push to overwrite the existing master branch

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}